/'*****
 License
 --------------
 Copyright Â© 2017 Bill & Melinda Gates Foundation
 The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
 http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 Contributors
 --------------
 This is the official list of the Mojaloop project contributors for this file.
 Names of the original copyright holders (individuals or organizations)
 should be listed with a '*' in the first column. People who have
 contributed from an organization can be listed under the organization
 that actually holds the copyright for their contributions (see the
 Gates Foundation organization for an example). Those individuals should have
 their names indented and be marked with a '-'. Email address can be added
 optionally within square brackets <email>.
 * Gates Foundation
 - Name Surname <name.surname@gatesfoundation.com>

 * Rajiv Mothilal <rajiv.mothilal@modusbox.com>
 --------------
 ******'/


@startuml
' declate title
title 7.1.0 Get Participant Details

autonumber
' Actor Keys:
' boundary - APIs/Interfaces, etc
' entity - Database Access Objects
' database - Database Persistance Store

' declare actors
actor "Payer FSP" as PAYER_FSP
boundary "Account Lookup Service" as ALS_API
control "ALS Participant Handler" as ALS_PARTICIPANT_HANDLER
entity "ALS Endpoint Type Config DAO" as ALS_TYPE_ENDPOINT_CONFIG_DAO
entity "ALS CentralService Endpoint DAO" as ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO
entity "ALS Participant Oracle DAO" as ALS_PARTICIPANT_ORACLE_DAO
entity "ALS Participant End-Point Oracle DAO" as ALS_PARTICIPANT_ORACLE_DAO
database "ALS Database" as ALS_DB
boundary "Oracle Service API" as ORACLE_API
boundary "Central Service API" as CENTRALSERVICE_API

box "Financial Service Provider" #LightGrey
participant PAYER_FSP
end box

box "Account Lookup Service" #LightYellow
participant ALS_API
participant ALS_PARTICIPANT_HANDLER
participant ALS_TYPE_ENDPOINT_CONFIG_DAO
participant ALS_PARTICIPANT_ORACLE_DAO
participant ALS_DB
participant ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO
end box

box "Central Services" #LightGreen
participant CENTRALSERVICE_API
end box

box "ALS Oracle Service/Adapter" #LightBlue
participant ORACLE_API
end box

' START OF FLOW

group Get Participant's FSP Details
    PAYER_FSP --> ALS_API: Request to get participant's FSP details \nGET - /participants/{TYPE}/{ID}?currency={CURRENCY}.\n<color #388724><b>Response code:</b> 202</color> \n<color #FF0000><b>Error code:</b> 200x, 300x, 310x, 320x</color>
    activate ALS_API
    ALS_API -> ALS_API: Validate request against Mojaloop Interface Specification. \n<color #FF0000><b>Error code:</b> 300x, 310x</color>

    ALS_API -> ALS_PARTICIPANT_HANDLER: Request to get participant's FSP details.
    deactivate ALS_API

    alt oracleEndpoint match found

        '********************* Fetch Oracle Routing Config - START ************************
        group #99cef7 REFERENCE: Get Oracle Routing Config Sequence [CACHED]

            activate ALS_PARTICIPANT_HANDLER

            ALS_PARTICIPANT_HANDLER -> ALS_TYPE_ENDPOINT_CONFIG_DAO: Fetch Oracle Routing information based on {TYPE}. \n<color #FF0000><b>Error code:</b> 200x</color>
            activate ALS_TYPE_ENDPOINT_CONFIG_DAO

            hnote over ALS_TYPE_ENDPOINT_CONFIG_DAO #lightyellow
                <b>if lookup for Oracle based on {CURRENCY} if and only if {CURRENCY} is provided</b>
                    SELECT oe.value, oe.centralSwitchEndpointId FROM account_lookup.oracleEndpoint as oe
                    inner join account_lookup.currency as cu on oe.currencyId =  cu.currencyId
                    inner join account_lookup.endpointType as et on oe.endpointTypeId = et.endpointTypeId
                    inner join account_lookup.partyIdType as pt on oe.partyIdTypeId = pt.partyIdTypeId
                    where cu.currencyId = '{CURRENCY}'
                    and pt.name = '{TYPE}'
                    and pt.isActive = true
                    and oe.isActive = true;
                <b>else lookup default Oracle if no {CURRENCY} is provided:</b>
                    SELECT oe.value, oe.centralSwitchEndpointId FROM account_lookup.oracleEndpoint as oe
                    inner join account_lookup.endpointType as et on oe.endpointTypeId = et.endpointTypeId
                    inner join account_lookup.partyIdType as pt on oe.partyIdTypeId = pt.partyIdTypeId
                    where pt.name = '{TYPE}'
                    and pt.isActive = true
                    and oe.isActive = true
                    and oe.isDefault = true;
                <b>end if</b>
            end note

            ALS_TYPE_ENDPOINT_CONFIG_DAO -> ALS_DB: SQL Select for oracleEndpoint. \n<color #FF0000><b>Error code:</b> 200x</color>

            activate ALS_DB

            hnote over ALS_DB #lightyellow
                    oracleEndpoint
                    centralSwitchEndpoint
                    endpointType
                    partyIdType
                    currency
            end note
            ALS_DB -> ALS_TYPE_ENDPOINT_CONFIG_DAO: return oracleEndpoint result set.

            deactivate ALS_DB

            ALS_TYPE_ENDPOINT_CONFIG_DAO -> ALS_PARTICIPANT_HANDLER: List of oracleEndpoint for the Participant
            deactivate ALS_TYPE_ENDPOINT_CONFIG_DAO

            ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_HANDLER: Throw <color #FF0000><b>Error code:</b> 3200</color> if list of oracleEndpoint results is empty.

        end group
        '********************* Fetch Oracle Routing Information - END ************************

        '********************* Request Participant Information from Oracle - START ************************
        group #599dd1 REFERENCE: Request Participant Information from Oracle Sequence

            ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_ORACLE_DAO: Request to get participant's FSP details \nGET - /participants/{TYPE}/{ID}?currency={CURRENCY}. \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
            activate ALS_PARTICIPANT_ORACLE_DAO
            ALS_PARTICIPANT_ORACLE_DAO -> ORACLE_API: Request to get participant's FSP details \nGET - /participants/{TYPE}/{ID}?currency={CURRENCY}. \n<color #388724><b>Response code:</b> 200</color> \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
            activate ORACLE_API

            ORACLE_API -> ALS_PARTICIPANT_ORACLE_DAO: Return list of Participant information.
            deactivate ORACLE_API

            ALS_PARTICIPANT_ORACLE_DAO -> ALS_PARTICIPANT_HANDLER: Return list of Participant information.
            deactivate ALS_PARTICIPANT_ORACLE_DAO

            '********************* Request Participant Information from Oracle - END ************************

        end group

        '********************* Get Switch Config Information - START ************************
        group #73a2c6 REFERENCE: Get Switch Routing Config Sequence [CACHED]

            alt if {centralSwitchEndpointId} has been attained from 'REFERENCE: Get Oracle Routing Config Sequence' or if list of oracleEndpoint results is NOT empty
                ALS_PARTICIPANT_HANDLER -> ALS_TYPE_ENDPOINT_CONFIG_DAO: Fetch Switch Routing information. \n<color #FF0000><b>Error code:</b> 200x</color>

                hnote over ALS_TYPE_ENDPOINT_CONFIG_DAO #lightyellow
                    select cs.value from account_lookup.centralSwitchEndpoint as cs
                    where centralSwitchEndpointId = {centralSwitchEndpointId from 'REFERENCE: Get Oracle Routing Config Sequence'};
                end note

                ALS_TYPE_ENDPOINT_CONFIG_DAO -> ALS_DB: SQL Select for switchEndpoint. \n<color #FF0000><b>Error code:</b> 200x</color>

                activate ALS_DB

                hnote over ALS_DB #lightyellow
                        ****** TBC ******
                        centralSwitchEndpoint
                        endpointType
                end note
                ALS_DB -> ALS_TYPE_ENDPOINT_CONFIG_DAO: return switchEndpoint result set.

                deactivate ALS_DB

                ALS_TYPE_ENDPOINT_CONFIG_DAO -> ALS_PARTICIPANT_HANDLER: Return switchEndpoint results
            else
                ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_HANDLER: Throw <color #FF0000><b>Error code:</b> 2000</color>
            end alt

        end group
        '********************* Get Switch Config Information - END ************************

        '********************* Get PayerFSP Callback End-points - START ************************

        ALS_PARTICIPANT_HANDLER -> ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO: Retrieve the PayerFSP Participant Callback End-point. \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
        activate ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO
        ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO -> CENTRALSERVICE_API: Retrieve the PayerFSP Participant Callback End-point - GET /participants/{FSPIOP-Source}/endpoints. \n<color #388724><b>Response code:</b> 200</color> \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
        activate CENTRALSERVICE_API
        CENTRALSERVICE_API -> ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO: List of PayerFSP Participant Callback End-points
        deactivate CENTRALSERVICE_API
        ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO -> ALS_PARTICIPANT_HANDLER: List of PayerFSP Participant Callback End-points
        deactivate ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO

        ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_HANDLER: Match PayerFSP Participant Callback End-points for `FSPIOP_CALLBACK_URL_PARTICIPANT_PUT`

        '********************* Get PayerFSP Participant Information - END ************************

        ALS_PARTICIPANT_HANDLER -> ALS_API: Return list of Participant information.

        activate ALS_API
        ALS_API --> PAYER_FSP: Callback: PUT - /participants/{TYPE}/{ID}?currency={CURRENCY}
        deactivate ALS_API

    else Empty list of End-Points returned or Error occurred

        ALS_PARTICIPANT_HANDLER -> ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO: Retrieve the Participant Callback End-point. \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
        activate ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO
        ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO -> CENTRALSERVICE_API: Retrieve the Participant Callback End-point - GET /participants/{FSPIOP-Source}/endpoints. \n<color #388724><b>Response code:</b> 200</color> \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
        activate CENTRALSERVICE_API
        CENTRALSERVICE_API -> ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO: List of Participant Callback End-points
        deactivate CENTRALSERVICE_API
        ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO -> ALS_PARTICIPANT_HANDLER: List of Participant Callback End-points
        deactivate ALS_CENTRALSERVICE_ENDPOINT_CONFIG_DAO

        ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_HANDLER: Match Participant Callback End-points for `FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR`

        ALS_PARTICIPANT_HANDLER -> ALS_API: Return \n<color #FF0000><b>Error code:</b> 200x, 310x, 320x</color>
        activate ALS_API
        ALS_API --> PAYER_FSP: Callback: PUT - /participants/{TYPE}/{ID}/error
        deactivate ALS_API
    else Empty list of switchEndpoint results returned
        ALS_PARTICIPANT_HANDLER -> ALS_PARTICIPANT_HANDLER: Handle error\n<color #FF0000><b>Error code:</b> 200x</color>
        hnote right ALS_PARTICIPANT_HANDLER #red
            Error Handling Framework
        end note
    end alt

    deactivate ALS_PARTICIPANT_HANDLER

end
@enduml
